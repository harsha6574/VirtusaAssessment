public class Practise
{
public static void main(String args[])
{
int a=10;
int b=10'
if(a==b)
{
System.out.println("a equals to b");
}
else
{
System.out.println("a  is notequals to b");
}
}}





                              FOR LOOP
public class Practise
{
public static void main(String args[])
{
int i;
for(i=1;i<5;i++)
{
System.out.println(i);
}
}
} 
                                            WHILE LOOP


public class Practise
{
public static void main(String args[])
{
int i=1;
while(i<10)
{
System.out.println(i);
i++;
}
}
}
                                                   DO WHILE


public class Practise
{
public static void main(String args[])
{
int i=1;
do
{
System.out.println(i);
i++;
}
while(i<10);
}
}



                                                     SWITCH CASE



public class Practise
{
public static void main(String args[])
{
int day=1;
switch(day)
{
case 1:System.out.println("monday");
break;
case 2:System.out.println("tuesday");
break;
case 3:System.out.println("wednesday");
break;
case 4:System.out.println("thursday");
break;
case 5:System.out.println("friday");
break;
case 6:System.out.println("saturday");
break;
default:System.out.println("sunday");
}
}
}







DIFFERENCES BETWEEN INTERPRETER AND COMPILER


  COMPILER                                                               INTERPRETER

1.Compiler execute one time                                            1.execute line by line.
2.as it scans the code						       2. it scans code one line at a time
   in one go ,the errors are						  errors are shown line by line.
   shown at the end.						       3.due to interpreter being slow in execution
3.main adavntage of compiler is it's					  the object code,it is prefered less.
  execution time.
4.it converts the  source code into					4.it doesn't convert source code into object
  object code.								 code insted it scans it line by line.
5. it doesn't require source code for					5. it requires source code for later execution.
  later execution.							6. python ,ruby,pearl etc..
6. c,c++ etc...




			  CREATING A CONSTRUCTOR INSIDE A CLASS


public class Rectangle {

Rectangle(int i, int j)
{
System.out.println("value is"+""+i*j);
  }
public static void main(String[] args) {
		
Rectangle d1=new Rectangle(10,20);
}
}



			CRAETING PARAMETERISED AND NON PARAMETERISED CONSTRUCTOR WITH IN SAME CLASS


public class Dmo1 {

Dmo1(int i, int j)
 {
System.out.println("value is"+""+i*j);
 }
Dmo1(){
System.out.println("value isnull");
}
public static void main(String[] args) {
		
Dmo1 d1=new Dmo1();
Dmo1 d2=new Dmo1(10,20);
}
}

					CREATING AN ARRAY BY USIN LOOP


public class Demo {	
public static void main(String[] args) 
{
int [] arr=new int[4];
arr[0]=10;
arr[1]=20;
arr[2]=30;
arr[3]=40;
for(int i=0;i<arr.length;i++)	
{
System.out.println(arr[i]);
}
}
}
